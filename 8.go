package main

import (
	"fmt"
	"math/rand"
	"time"
)

//Дана переменная int64. Разработать программу которая устанавливает i-й бит в 1 или 0.

func main() {
	var num int64
	fmt.Println(num)

	bits := make([]int, 64)

	//В этом коде мы используем побитовый сдвиг вправо (>>) и побитовое И (&) для получения каждого бита числа num.
	//Затем мы записываем каждый бит в соответствующую ячейку массива.
	//Мы сдвигаем число num на i битов вправо с помощью оператора >>.
	//Это позволяет нам получить значение каждого бита по очереди.
	//Затем мы применяем побитовое И с числом 1, чтобы оставить только младший бит, который и записываем в переменную bit.
	for i := 63; i >= 0; i-- {
		bit := (num >> uint(i)) & 1
		bits[i] = int(bit)
	}
	fmt.Println(bits)

	rand.Seed(time.Now().UnixNano())
	for i := len(bits) - 1; i >= 0; i-- {
		bits[i] = rand.Intn(2)
	}
	fmt.Println(bits)
}
